<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NewAndNotable</name>
    </assembly>
    <members>
        <member name="T:DotNetNuke.Modules.NewAndNotable.NewAndNotableModuleBase">
            <summary>
            This base class can be used to define custom properties for multiple controls. 
            An example module, DNNSimpleArticle (http://dnnsimplearticle.codeplex.com) uses this for an ArticleId
            
            Because the class inherits from PortalModuleBase, properties like ModuleId, TabId, UserId, and others, 
            are accessible to your module's controls (that inherity from NewAndNotableModuleBase
            
            </summary>
        </member>
        <member name="M:DotNetNuke.Modules.NewAndNotable.NewAndNotableModuleBase.LogFileWrite(System.Exception)">
            <summary>
             Writes Exceptions to log file in user readable format
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.Edit.titleOfModule">
            <summary>
            titleOfModule control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.Edit.txtIsbn1">
            <summary>
            txtIsbn1 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.Edit.txtIsbn2">
            <summary>
            txtIsbn2 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.Edit.txtIsbn3">
            <summary>
            txtIsbn3 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.Edit.txtIsbn4">
            <summary>
            txtIsbn4 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.Edit.txtIsbn5">
            <summary>
            txtIsbn5 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.Edit.txtIsbn6">
            <summary>
            txtIsbn6 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.Edit.displayCount">
            <summary>
            displayCount control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.Edit.btnNewSave">
            <summary>
            btnNewSave control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="M:DotNetNuke.Modules.NewAndNotable.Edit.Page_Load(System.Object,System.EventArgs)">
            -----------------------------------------------------------------------------
            <summary>
            Page_Load runs when the control is loaded
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="T:DotNetNuke.Modules.NewAndNotable.Settings">
            <summary>
            Settings class.
            </summary>
            <remarks>
            Auto-generated class.
            </remarks>
            -----------------------------------------------------------------------------
            <summary>
            The Settings class manages Module Settings
            
            Typically your settings control would be used to manage settings for your module.
            There are two types of settings, ModuleSettings, and TabModuleSettings.
            
            ModuleSettings apply to all "copies" of a module on a site, no matter which page the module is on. 
            
            TabModuleSettings apply only to the current module on the current page, if you copy that module to
            another page the settings are not transferred.
            
            If you happen to save both TabModuleSettings and ModuleSettings, TabModuleSettings overrides ModuleSettings.
            
            Below we have some examples of how to access these settings but you will need to uncomment to use.
            
            Because the control inherits from NewAndNotableSettingsBase you have access to any custom properties
            defined there, as well as properties from DNN such as PortalId, ModuleId, TabId, UserId and many more.
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="T:DotNetNuke.Modules.NewAndNotable.NewAndNotableSettingsBase">
            <summary>
            This base class can be used to define custom properties for multiple controls. 
            An example module, DNNSimpleArticle (http://dnnsimplearticle.codeplex.com) uses this for an ArticleId
            
            Because the class inherits from SettingsModuleBase, properties like ModuleId, TabId, UserId, and others, 
            are accessible to your module's controls (that inherity from NewAndNotableSettingsBase
            
            </summary>
        </member>
        <member name="M:DotNetNuke.Modules.NewAndNotable.Settings.LoadSettings">
            -----------------------------------------------------------------------------
            <summary>
            LoadSettings loads the settings from the Database and displays them
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Modules.NewAndNotable.Settings.UpdateSettings">
            -----------------------------------------------------------------------------
            <summary>
            UpdateSettings saves the modified settings to the Database
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="T:DotNetNuke.Modules.NewAndNotable.Components.Handlers.NewAndNotableHandler">
            <summary>
            Summary description for NewAndNotableHandler
            </summary>
        </member>
        <member name="T:DotNetNuke.Modules.NewAndNotable.Components.FeatureController">
            -----------------------------------------------------------------------------
            <summary>
            The Controller class for NewAndNotable
            
            The FeatureController class is defined as the BusinessController in the manifest file (.dnn)
            DotNetNuke will poll this class to find out which Interfaces the class implements. 
            
            The IPortable interface is used to import/export content from a DNN module
            
            The ISearchable interface is used by DNN to index the content of a module
            
            The IUpgradeable interface allows module developers to execute code during the upgrade 
            process for a module.
            
            Below you will find stubbed out implementations of each, uncomment and populate with your own data
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.View.newUpdatePanel">
            <summary>
            newUpdatePanel control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.View.divNew">
            <summary>
            divNew control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.View.spanTitle">
            <summary>
            spanTitle control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.View.divNewSeeAll">
            <summary>
            divNewSeeAll control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.View.btnNewSeeAll">
            <summary>
            btnNewSeeAll control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.View.divNewHideAll">
            <summary>
            divNewHideAll control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.View.btnHideAll">
            <summary>
            btnHideAll control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:DotNetNuke.Modules.NewAndNotable.View.newProductResultsRptr">
            <summary>
            newProductResultsRptr control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="M:DotNetNuke.Modules.NewAndNotable.View.Page_Load(System.Object,System.EventArgs)">
            -----------------------------------------------------------------------------
            <summary>
            Page_Load runs when the control is loaded
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:DotNetNuke.Modules.NewAndNotable.View.FormatImageURL">
            <summary>
            Book image format url function
            </summary>
            <param name="TabID"></param>
            <param name="Link"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetNuke.Modules.NewAndNotable.View.FormatURL(System.String,System.String)">
            <summary>
            Product detail page's url format  function
            </summary>
            <param name="TabID"></param>
            <param name="Link"></param>
            <returns></returns>
        </member>
    </members>
</doc>
